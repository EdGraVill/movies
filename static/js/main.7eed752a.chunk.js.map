{"version":3,"sources":["util.ts","reportWebVitals.ts","UI/Content.tsx","UI/Details.tsx","UI/Movie.tsx","UI/SectionTitle.tsx","UI/Grid.tsx","assets/logo.svg","UI/Search.tsx","UI/Jumbo.tsx","useTrending.ts","App.tsx","Movies/api.ts","Movies/selectors.ts","Movies/slicer.ts","Movies/sagas.ts","store/getStore.ts","index.tsx"],"names":["isProdEnv","process","mergeToLeft","left","right","uniqueId","draft","reduce","prev","curr","Object","values","randomBetween","min","max","ignore","ignoreLength","length","Error","JSON","stringify","undefined","random","Math","floor","Array","indexOf","useDebounce","text","time","React","debouncedText","setDebouncedText","newText","timeout","setTimeout","clearTimeout","getSearchText","queries","location","search","replace","split","decodeURI","useSwitch","initialState","value","setValue","switcher","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","root","backgroundColor","display","justifyContent","width","content","maxWidth","Content","children","classes","className","layout","image","height","flexFlow","marginLeft","genre","margin","Details","movie","genreMap","useSelector","genreMapSelector","Card","elevation","CardContent","src","getImageURL","poster_path","size","Typography","gutterBottom","title","original_title","variant","component","release_date","slice","Rating","readOnly","vote_average","vote_count","overview","genre_ids","map","id","Chip","label","props","gridRow","highlightFirst","positionIx","overflow","media","textOverflow","area","flexGrow","flexDirection","alignItems","Movie","onClick","filters","searchFiltersSelector","CardActionArea","CardMedia","backdrop_path","vote","color","fontSize","SectionTitle","spring","presets","wobbly","container","columnGap","gridTemplateColumns","gridTemplateRows","rows","marginBottom","rowGap","transition","modal","Grid","movieList","isModalOpen","setModal","selectedMovie","setMovie","onClose","onMovieSelect","Paper","filter","_","ix","Modal","open","position","border","borderRadius","marginTop","padding","textAlign","zIndex","outline","opacity","clear","cursor","top","Search","dispatch","useDispatch","setText","isFiltering","switchFiltering","stars","setStars","moviesActions","setSearchText","clearSearchText","setSearchFilters","onChange","event","currentTarget","onRate","placeholder","avatar","clickable","name","onDelete","containerInSearch","backgorund","bottom","imagesContainer","transform","animation","animationDirection","animationTimingFunction","backfaceVisibility","objectFit","perspective","backdropFilter","brand","fontFamily","logo","getRandomPosters","callback","a","nPages","pages","fill","arr","Promise","all","discover","page","results","images","flatMap","data","Jumbo","posterUrlList","setPosterUrlList","list","url","animationDuration","x","y","style","alt","useTrending","trendingList","setTrendingList","fetchTrendingList","getTrending","response","App","movieListSelector","searchText","searchTextSelector","searchList","searchListSelector","useEffect","fetchDiscovery","sort_by","imagePath","config","agent","axios","create","baseURL","params","api_key","args","get","getGenreList","searchMovie","moviesRootStateSelector","state","movies","createSelector","genreMapLengthSelector","searchFilters","roof","createSlice","isFetching","lastError","reducers","payload","fulfillMovieList","fulfillGenreMap","genres","catchError","clearError","fulfillSearchList","actions","moviesReducerName","moviesReducer","reducer","fetchDiscoveryEffect","setSearchTextEffect","moviesSagas","call","discoverResponse","put","select","genreListResponse","message","history","replaceState","document","pathname","query","include_adult","takeEvery","reducersMapObject","getStore","sagasMiddleware","createSagaMiddleware","store","configureStore","combineReducers","devTools","middleware","getDefaultMiddleware","run","versions","node","ReactDOM","render","StrictMode","getElementById","console","log"],"mappings":"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","file":"static/js/main.7eed752a.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport const isProdEnv = process.env.NODE_ENV === 'production';\n\nexport const mergeToLeft = <T>(left: T[], right: T[], uniqueId: keyof T): T[] => {\n  const draft = [...left, ...right].reduce(\n    (prev, curr) => ({\n      ...prev,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [curr[uniqueId] as any]: curr,\n    }),\n    {},\n  );\n\n  return Object.values(draft);\n};\n\nexport const randomBetween = (min: number, max: number, ignore?: number | number[]): number => {\n  const ignoreLength = typeof ignore === 'undefined' ? 0 : typeof ignore === 'number' ? 1 : ignore.length;\n\n  if (min >= max || ignoreLength >= max - min) {\n    throw new Error(`Invalid operation:\\n\\n${JSON.stringify({ min, max, ignore }, undefined, 2)}`);\n  }\n\n  let random = Math.floor(Math.random() * (max - min + 1) + min);\n\n  if (typeof ignore === 'undefined' || (ignore instanceof Array && !ignore.length)) {\n    return random;\n  } else if (typeof ignore === 'number') {\n    while (random === ignore) {\n      random = Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    return random;\n  } else if (ignore instanceof Array && typeof ignore[0] === 'number') {\n    while (ignore.indexOf(random) !== -1) {\n      random = Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    return random;\n  }\n\n  throw new Error(`Invalid operation:\\n\\n${JSON.stringify({ min, max, ignore }, undefined, 2)}`);\n};\n\nexport const useDebounce = (text: string, time = 1000): string => {\n  const [debouncedText, setDebouncedText] = React.useState(text);\n\n  React.useEffect(() => {\n    const newText = text;\n\n    const timeout = setTimeout(() => {\n      setDebouncedText(newText);\n    }, time);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [text, time]);\n\n  return debouncedText;\n};\n\nexport const getSearchText = (): string => {\n  const queries: { [query: string]: string } = location.search\n    ? location.search\n        .replace('?', '')\n        .split('&')\n        .reduce(\n          (prev, curr) => ({\n            ...prev,\n            [curr.split('=')[0]]: decodeURI(curr.split('=')[1]),\n          }),\n          {},\n        )\n    : {};\n\n  if (queries.search) {\n    return queries.search;\n  }\n\n  return '';\n};\n\nexport const useSwitch = (initialState = true): [value: boolean, switcher: () => void] => {\n  const [value, setValue] = React.useState(initialState);\n\n  const switcher = () => {\n    setValue(!value);\n  };\n\n  return [value, switcher];\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeStyles } from '@material-ui/core';\nimport * as React from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100vw',\n  },\n  content: {\n    maxWidth: 1024,\n    width: '95%',\n  },\n});\n\nconst Content: React.FC = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Content;\n","import { Card, CardContent, Chip, makeStyles, Typography } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { genreMapSelector, getImageURL } from '../Movies';\n\nconst useStyles = makeStyles({\n  layout: {\n    display: 'flex',\n  },\n  image: {\n    height: 300,\n    width: 200,\n  },\n  content: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    marginLeft: '1rem',\n    width: 300,\n  },\n  genre: {\n    margin: '.3rem .5rem',\n  },\n});\n\ninterface Props {\n  movie: MovieDB.Objects.Movie;\n}\n\nconst Details: React.FC<Props> = ({ movie }) => {\n  const classes = useStyles();\n  const genreMap = useSelector(genreMapSelector);\n\n  return (\n    <Card elevation={5}>\n      <CardContent className={classes.layout}>\n        <img className={classes.image} src={getImageURL(movie.poster_path!, { size: '200' })} />\n        <div className={classes.content}>\n          <Typography gutterBottom={movie.title === movie.original_title} variant=\"h5\">\n            {movie.title}{' '}\n            <Typography variant=\"caption\" component=\"span\">\n              {movie.release_date.slice(0, 4)}\n            </Typography>\n          </Typography>\n          {movie.title !== movie.original_title && (\n            <Typography gutterBottom variant=\"subtitle2\">\n              ({movie.original_title})\n            </Typography>\n          )}\n          <Typography gutterBottom>\n            <Rating readOnly value={Math.floor((movie.vote_average - 0.0001) / 2) + 1} />\n            <Typography variant=\"caption\" component=\"span\">\n              {movie.vote_count} votes\n            </Typography>\n          </Typography>\n          <Typography gutterBottom variant=\"body2\">\n            {movie.overview}\n          </Typography>\n          <div>\n            {movie.genre_ids.map((id) => (\n              <Chip className={classes.genre} key={id} label={genreMap[id]} size=\"small\" />\n            ))}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Details;\n","import { Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getImageURL, searchFiltersSelector } from '../Movies';\n\nconst useStyles = makeStyles({\n  root: (props: { highlightFirst: boolean; positionIx: number }) => ({\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    gridRow: props.highlightFirst && props.positionIx === 0 ? '1/3' : 'initial',\n    '& p':\n      props.highlightFirst && props.positionIx === 0\n        ? {\n            overflow: 'initial',\n          }\n        : {},\n  }),\n  media: {\n    height: 120,\n  },\n  overview: {\n    height: '6.1em',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  area: {\n    flexGrow: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n});\n\ninterface Props {\n  highlightFirst: boolean;\n  movie: MovieDB.Objects.Movie;\n  onClick?(movie: MovieDB.Objects.Movie): void;\n  positionIx: number;\n}\n\nconst Movie: React.FC<Props> = ({ highlightFirst, movie, onClick, positionIx }) => {\n  const classes = useStyles({ highlightFirst, positionIx });\n  const filters = useSelector(searchFiltersSelector);\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea className={classes.area} onClick={() => (onClick ? onClick(movie) : null)}>\n        <CardMedia className={classes.media} image={getImageURL(movie.backdrop_path!)} />\n        <CardContent>\n          {typeof filters.vote === 'number' && <Rating readOnly size=\"small\" value={filters.vote} />}\n          <Typography gutterBottom>{movie.title}</Typography>\n          <Typography className={classes.overview} color=\"textSecondary\" component=\"p\" variant=\"body2\">\n            {movie.overview}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default Movie;\n","import { makeStyles } from '@material-ui/core';\nimport * as React from 'react';\nimport ReactTextTransition, { presets } from 'react-text-transition';\n\nconst useStyles = makeStyles({\n  text: {\n    fontSize: '2rem',\n    margin: '1.5rem 0',\n  },\n});\n\ninterface Props {\n  children: string;\n}\n\nconst SectionTitle: React.FC<Props> = ({ children }) => {\n  const classes = useStyles();\n\n  return <ReactTextTransition className={classes.text} spring={presets.wobbly} text={children} />;\n};\n\nexport default SectionTitle;\n","import { makeStyles, Modal, Paper } from '@material-ui/core';\nimport * as React from 'react';\nimport Details from './Details';\nimport Movie from './Movie';\nimport SectionTitle from './SectionTitle';\n\nconst useStyles = makeStyles({\n  container: (props: { highlightFirst: boolean; rows: number }) => ({\n    display: 'grid',\n    columnGap: '1rem',\n    gridTemplateColumns: props.highlightFirst ? '1.5fr repeat(3, 1fr)' : 'repeat(4, 1fr)',\n    gridTemplateRows: `repeat(${props.rows}, 300px)`,\n    marginBottom: '5rem',\n    overflow: 'hidden',\n    rowGap: `repeat(${props.rows}, 2rem)`,\n    transition: 'all 0.3s cubic-bezier(.25, .8, .25, 1)',\n  }),\n  modal: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\ninterface Props {\n  highlightFirst?: boolean;\n  movieList: MovieDB.Objects.Movie[];\n  rows?: number;\n  title: string;\n}\n\nconst Grid: React.FC<Props> = ({ highlightFirst = false, movieList, title, rows = 2 }) => {\n  const classes = useStyles({ highlightFirst, rows });\n  const [isModalOpen, setModal] = React.useState(false);\n  const [selectedMovie, setMovie] = React.useState<MovieDB.Objects.Movie | null>(null);\n\n  const onClose = React.useCallback(() => {\n    setModal(false);\n    setMovie(null);\n  }, []);\n\n  const onMovieSelect = React.useCallback((movie: MovieDB.Objects.Movie) => {\n    setModal(true);\n    setMovie(movie);\n  }, []);\n\n  return (\n    <>\n      <SectionTitle>{title}</SectionTitle>\n      <Paper className={classes.container} elevation={0}>\n        {movieList\n          .filter((_, ix) => ix < rows * 4 - (highlightFirst ? 1 : 0))\n          .map((movie, ix) => (\n            <Movie\n              highlightFirst={highlightFirst}\n              key={movie.id}\n              movie={movie}\n              onClick={onMovieSelect}\n              positionIx={ix}\n            />\n          ))}\n      </Paper>\n      <Modal className={classes.modal} open={isModalOpen} onClose={onClose}>\n        {selectedMovie ? <Details movie={selectedMovie!} /> : <></>}\n      </Modal>\n    </>\n  );\n};\n\nexport default Grid;\n","export default __webpack_public_path__ + \"static/media/logo.b07c04a5.svg\";","import { Chip, makeStyles } from '@material-ui/core';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { moviesActions } from '../Movies';\nimport { getSearchText, useDebounce, useSwitch } from '../util';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    position: 'relative',\n  },\n  search: {\n    backgroundColor: 'rgba(255, 255, 255, .85)',\n    border: 0,\n    borderRadius: '.5rem',\n    fontSize: '1.1rem',\n    marginTop: '3rem',\n    padding: '.8rem 2.5rem',\n    textAlign: 'center',\n    width: 400,\n    zIndex: 2,\n    '&:focus': {\n      outline: 'none',\n    },\n    '&:not(:placeholder-shown) + div': {\n      opacity: 1,\n    },\n  },\n  filter: {\n    marginTop: '1rem',\n    opacity: 0,\n    transition: 'all 0.3s cubic-bezier(.25, .8, .25, 1)',\n  },\n  clear: {\n    backgroundColor: 'transparent',\n    border: 0,\n    color: 'black',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: '.5rem',\n    top: '3.6rem',\n    '&:focus': {\n      outline: 'none',\n    },\n    zIndex: 3,\n  },\n});\n\nconst Search: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [text, setText] = React.useState(getSearchText());\n  const debouncedText = useDebounce(text, 500);\n  const [isFiltering, switchFiltering] = useSwitch(false);\n  const [stars, setStars] = React.useState<number | null>();\n\n  React.useEffect(() => {\n    if (debouncedText) {\n      dispatch(moviesActions.setSearchText(debouncedText));\n    }\n  }, [debouncedText]);\n\n  React.useEffect(() => {\n    if (!text) {\n      dispatch(moviesActions.clearSearchText());\n    }\n  }, [text]);\n\n  React.useEffect(() => {\n    if (!isFiltering) {\n      setStars(null);\n    }\n  }, [isFiltering]);\n\n  React.useEffect(() => {\n    dispatch(moviesActions.setSearchFilters({ vote: stars }));\n  }, [stars]);\n\n  const onChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.currentTarget.value);\n  }, []);\n\n  const onRate = React.useCallback((event: React.ChangeEvent<{}>, value: number | null) => {\n    setStars(value);\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <input\n        className={classes.search}\n        onChange={onChange}\n        placeholder=\"Search for your next favorite story\"\n        value={text}\n      />\n      <Chip\n        avatar={<FilterListIcon />}\n        className={classes.filter}\n        clickable\n        label={isFiltering ? <Rating name=\"vote\" onChange={onRate} value={stars} /> : 'Filter Results'}\n        onDelete={isFiltering ? switchFiltering : undefined}\n        onClick={!isFiltering ? switchFiltering : undefined}\n      />\n      {text && (\n        <button className={classes.clear} onClick={() => setText('')}>\n          <BackspaceIcon />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import { makeStyles, Paper } from '@material-ui/core';\nimport * as React from 'react';\nimport { discover, getImageURL } from '../Movies';\nimport { randomBetween } from '../util';\nimport logo from '../assets/logo.svg';\nimport Search from './Search';\n\nconst useStyles = makeStyles({\n  container: {\n    height: 500,\n    position: 'relative',\n    transition: 'all 0.3s cubic-bezier(.25, .8, .25, 1)',\n  },\n  containerInSearch: {\n    height: 200,\n    '& .brand': {\n      marginBottom: '-200px',\n      opacity: 0,\n    },\n  },\n  backgorund: {\n    backgroundColor: 'black',\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  imagesContainer: {\n    height: 500,\n    transform: 'rotate(30deg)',\n    width: '200vw',\n  },\n  image: {\n    animation: 'jumbo_image 20s infinite',\n    animationDirection: 'alternate',\n    animationTimingFunction: 'linear',\n    backfaceVisibility: 'hidden',\n    height: 150,\n    objectFit: 'contain',\n    perspective: 1000,\n    position: 'relative',\n    width: 100,\n  },\n  content: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)',\n    backdropFilter: 'blur(2px)',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    height: '100%',\n    justifyContent: 'center',\n    position: 'relative',\n    width: '100%',\n  },\n  brand: {\n    alignItems: 'center',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    justifyContent: 'center',\n    transition: 'all 0.3s cubic-bezier(.25, .8, .25, 1)',\n  },\n  title: {\n    color: 'white',\n    fontFamily: '',\n    fontSize: '3rem',\n  },\n  logo: {\n    margin: '0 auto',\n    width: 100,\n  },\n});\n\nconst getRandomPosters = async (callback: (list: string[]) => void, nPages = 20) => {\n  const pages = new Array(nPages).fill(0).map((_, ix, arr) => randomBetween(1, 50, arr));\n\n  const results = await Promise.all(pages.map(async () => discover({ page: randomBetween(1, 500) })));\n\n  const images = results.flatMap(({ data: { results } }) =>\n    results\n      .filter(({ poster_path }) => !!poster_path)\n      .map(({ poster_path }) => getImageURL(poster_path!, { size: '200' })),\n  );\n\n  callback(images);\n};\n\ninterface ImageSet {\n  animationDuration: string;\n  opacity: number;\n  url: string;\n  x: number;\n  y: number;\n}\n\nconst Jumbo: React.FC = () => {\n  const [posterUrlList, setPosterUrlList] = React.useState<ImageSet[]>([]);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if (!posterUrlList.length) {\n      getRandomPosters((list) =>\n        setPosterUrlList(\n          list.map(\n            (url): ImageSet => ({\n              animationDuration: `${randomBetween(20, 30)}s`,\n              opacity: Math.random(),\n              url,\n              x: randomBetween(-5, 5),\n              y: randomBetween(-5, 5),\n            }),\n          ),\n        ),\n      );\n    }\n  }, []);\n\n  return (\n    <Paper className={classes.container} elevation={5}>\n      <div className={classes.backgorund}>\n        <div className={classes.imagesContainer}>\n          {posterUrlList.map(({ animationDuration, opacity, url, x, y }, ix) => (\n            <img\n              className={classes.image}\n              key={ix}\n              src={url}\n              style={{\n                animationDuration,\n                opacity,\n                transform: `translateX(${x}em) translateY(${y}em)`,\n              }}\n            />\n          ))}\n        </div>\n      </div>\n      <div className={classes.content}>\n        <div className={`brand ${classes.brand}`}>\n          <img alt=\"CINEMARS LOGO\" className={classes.logo} src={logo} />\n          <h1 className={classes.title}>CINEMARS</h1>\n        </div>\n        <Search />\n      </div>\n    </Paper>\n  );\n};\n\nexport default Jumbo;\n","import * as React from 'react';\nimport { getTrending } from './Movies';\n\nconst useTrending = (): [trendingList: MovieDB.Objects.Movie[], fetchTrendingList: () => void] => {\n  const [trendingList, setTrendingList] = React.useState<MovieDB.Objects.Movie[]>([]);\n\n  const fetchTrendingList = React.useCallback(async () => {\n    const response = await getTrending();\n\n    setTrendingList(response.data.results);\n  }, []);\n\n  React.useEffect(() => {\n    fetchTrendingList();\n  }, []);\n\n  return [trendingList, fetchTrendingList];\n};\n\nexport default useTrending;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { movieListSelector, moviesActions, searchListSelector, searchTextSelector } from './Movies';\nimport { Content, Grid, Jumbo } from './UI';\nimport useTrending from './useTrending';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const movieList = useSelector(movieListSelector);\n  const searchText = useSelector(searchTextSelector);\n  const searchList = useSelector(searchListSelector);\n  const [trendingList] = useTrending();\n\n  React.useEffect(() => {\n    if (!searchText) {\n      dispatch(moviesActions.fetchDiscovery({ sort_by: 'popularity.desc' }));\n    }\n  }, [searchText]);\n\n  return (\n    <>\n      <Jumbo />\n      <Content>\n        <Grid\n          highlightFirst={!searchText}\n          movieList={!searchText ? movieList : searchList}\n          rows={!searchText ? 2 : Math.floor(searchList.length / 4) + 1}\n          title={searchText ? 'Search results' : 'Popular Movies'}\n        />\n        <Grid movieList={trendingList} title=\"Trending\" />\n      </Content>\n    </>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nexport interface ImageURLConfig {\n  size?: '200' | '500' | 'original';\n}\n\nexport const getImageURL = (imagePath: string, config: ImageURLConfig = { size: 'original' }) => {\n  const size = config.size! === 'original' ? 'original' : `w${config.size}`;\n\n  return `https://image.tmdb.org/t/p/${size}/${imagePath}`;\n};\n\nexport const apiKey = 'c076492e6459d16464611cae34b26ad3';\n\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: apiKey,\n  },\n});\n\nexport const discover = async (args?: MovieDB.Arguments.Discover.Movie['query']) =>\n  agent.get<MovieDB.Responses.Discover.Movie>('/discover/movie', {\n    params: args || {},\n  });\n\nexport const getGenreList = async () => agent.get<MovieDB.Responses.Genre.Common>('/genre/movie/list');\n\nexport const searchMovie = async (args?: MovieDB.Arguments.Search.Movies['query']) =>\n  agent.get<MovieDB.Responses.Search.Movies>('/search/movie', {\n    params: args || {},\n  });\n\nexport const getTrending = async () => agent.get<MovieDB.Responses.Trending.GetTrending>('/trending/movie/day');\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../store';\n\nexport const moviesRootStateSelector = (state: State) => state.movies;\n\nexport const genreMapSelector = createSelector(moviesRootStateSelector, ({ genreMap }) => genreMap);\nexport const genreMapLengthSelector = createSelector(genreMapSelector, (genreMap) => Object.values(genreMap).length);\n\nexport const searchTextSelector = createSelector(moviesRootStateSelector, ({ searchText }) => searchText);\n\nexport const movieListSelector = createSelector(moviesRootStateSelector, ({ movieList }) => movieList);\n\nexport const searchListSelector = createSelector(moviesRootStateSelector, ({ searchList, searchFilters }) => {\n  let list = searchList;\n\n  if (typeof searchFilters?.vote === 'number') {\n    const [floor, roof] = [searchFilters.vote * 2 - 2, searchFilters.vote * 2];\n\n    list = list.filter(({ vote_average }) => vote_average >= floor && vote_average <= roof);\n  }\n\n  return list;\n});\n\nexport const searchFiltersSelector = createSelector(moviesRootStateSelector, ({ searchFilters }) => searchFilters);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { mergeToLeft, getSearchText } from '../util';\n\nexport interface SearchFilters {\n  vote?: number | null;\n}\n\nexport const getMoviesIntialState = () => ({\n  isFetching: false,\n  lastError: null as string | null,\n  genreMap: {} as { [genreId: number]: string },\n  movieList: [] as MovieDB.Objects.Movie[],\n  searchList: [] as MovieDB.Objects.Movie[],\n  searchFilters: {} as SearchFilters,\n  searchText: getSearchText(),\n});\n\nexport type MoviesState = ReturnType<typeof getMoviesIntialState>;\n\nexport const { actions: moviesActions, name: moviesReducerName, reducer: moviesReducer } = createSlice({\n  initialState: getMoviesIntialState(),\n  name: 'movies',\n  reducers: {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetchDiscovery(state, { payload }: PayloadAction<MovieDB.Arguments.Discover.Movie['query'] | undefined>) {\n      state.isFetching = true;\n    },\n    fulfillMovieList(state, { payload }: PayloadAction<MovieDB.Objects.Movie[]>) {\n      state.isFetching = false;\n      state.movieList = mergeToLeft(state.movieList, payload, 'id');\n    },\n    fulfillGenreMap(state, { payload }: PayloadAction<MovieDB.Responses.Genre.Common>) {\n      state.genreMap = payload.genres.reduce(\n        (prev, curr) => ({\n          ...prev,\n          [curr.id]: curr.name,\n        }),\n        {},\n      );\n    },\n    catchError(state, { payload }: PayloadAction<string>) {\n      state.lastError = payload;\n    },\n    clearError(state) {\n      state.lastError = null;\n    },\n    setSearchText(state, { payload }: PayloadAction<string>) {\n      state.searchText = payload;\n\n      if (!payload) {\n        state.searchList = [];\n        state.searchFilters = {};\n      }\n    },\n    clearSearchText(state) {\n      state.searchText = '';\n      state.searchList = [];\n      state.searchFilters = {};\n    },\n    fulfillSearchList(state, { payload }: PayloadAction<MovieDB.Objects.Movie[]>) {\n      state.searchList = payload;\n    },\n    setSearchFilters(state, { payload }: PayloadAction<SearchFilters | undefined>) {\n      state.searchFilters = payload || {};\n    },\n  },\n});\n","import { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { ThenArg } from '../types';\nimport { discover, getGenreList, searchMovie } from './api';\nimport { genreMapLengthSelector, searchTextSelector } from './selectors';\nimport { moviesActions } from './slicer';\n\nexport function* fetchDiscoveryEffect({ payload }: ReturnType<typeof moviesActions['fetchDiscovery']>) {\n  try {\n    const discoverResponse: ThenArg<ReturnType<typeof discover>> = yield call(discover, payload);\n\n    yield put(moviesActions.fulfillMovieList(discoverResponse.data.results));\n\n    const genreMapLength: number = yield select(genreMapLengthSelector);\n\n    if (!genreMapLength) {\n      const genreListResponse: ThenArg<ReturnType<typeof getGenreList>> = yield call(getGenreList);\n\n      yield put(moviesActions.fulfillGenreMap(genreListResponse.data));\n    }\n  } catch (error) {\n    yield put(moviesActions.catchError(error.message));\n  }\n}\n\nexport function* setSearchTextEffect() {\n  const newText: string = yield select(searchTextSelector);\n\n  if (!newText) {\n    history.replaceState('', document.title, `${location.pathname}`);\n  } else {\n    history.replaceState('', document.title, `${location.pathname}?search=${newText}`);\n\n    try {\n      const searchList: ThenArg<ReturnType<typeof searchMovie>> = yield call(searchMovie, {\n        query: newText,\n        include_adult: false,\n      });\n\n      yield put(moviesActions.fulfillSearchList(searchList.data.results));\n    } catch (error) {\n      yield put(moviesActions.catchError(error.message));\n    }\n  }\n}\n\nexport function* moviesSagas() {\n  yield takeEvery(moviesActions.fetchDiscovery, fetchDiscoveryEffect);\n  yield takeEvery(['@@INIT', moviesActions.setSearchText, moviesActions.clearSearchText], setSearchTextEffect);\n}\n","import { combineReducers, configureStore, getDefaultMiddleware, StateFromReducersMapObject } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { moviesReducer, moviesReducerName, moviesSagas } from '../Movies';\nimport { isProdEnv } from '../util';\n\nexport const reducersMapObject = {\n  [moviesReducerName]: moviesReducer,\n};\n\nexport type State = StateFromReducersMapObject<typeof reducersMapObject>;\n\nexport const getStore = () => {\n  const sagasMiddleware = createSagaMiddleware();\n\n  const store = configureStore({\n    reducer: combineReducers(reducersMapObject),\n    devTools: !isProdEnv,\n    middleware: [...getDefaultMiddleware(), sagasMiddleware],\n  });\n\n  sagasMiddleware.run(moviesSagas);\n\n  return store;\n};\n\nexport type Store = ReturnType<typeof getStore>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { getStore } from './store';\nimport './index.css';\n\nprocess.versions.node = '14.0';\n\nconst store = getStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}